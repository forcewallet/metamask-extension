diff --git a/node_modules/secp256k1/lib/elliptic/index.js b/node_modules/secp256k1/lib/elliptic/index.js
index 16e77e0..1df07ea 100644
--- a/node_modules/secp256k1/lib/elliptic/index.js
+++ b/node_modules/secp256k1/lib/elliptic/index.js
@@ -6,7 +6,7 @@ var EC = require('elliptic').ec
 
 var messages = require('../messages.json')
 
-var ec = new EC('secp256k1')
+var ec = new EC('p256')
 var ecparams = ec.curve
 
 function loadCompressedPublicKey (first, xBuffer) {
diff --git a/node_modules/secp256k1/lib/js/ecpointg.js b/node_modules/secp256k1/lib/js/ecpointg.js
index 0144364..72ce62e 100644
--- a/node_modules/secp256k1/lib/js/ecpointg.js
+++ b/node_modules/secp256k1/lib/js/ecpointg.js
@@ -9,10 +9,12 @@ function ECPointG () {
   this.y = BN.fromBuffer(Buffer.from('483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68554199C47D08FFB10D4B8', 'hex'))
   this.inf = false
 
-  this._precompute()
+  this.precomputed = undefined
 }
 
 ECPointG.prototype._precompute = function () {
+  if (this.precomputed !== undefined) return
+
   var ecpoint = new ECPoint(this.x, this.y)
 
   var dstep = 4
@@ -34,6 +36,7 @@ ECPointG.prototype._precompute = function () {
 }
 
 ECPointG.prototype.mul = function (num) {
+  this._precompute()
   // Algorithm 3.42 Fixed-base NAF windowing method for point multiplication
   var step = this.precomputed.doubles.step
   var points = this.precomputed.doubles.points
@@ -68,6 +71,7 @@ ECPointG.prototype.mul = function (num) {
 }
 
 ECPointG.prototype.mulAdd = function (k1, p2, k2) {
+  this._precompute()
   var nafPointsP1 = this.precomputed.naf
   var nafPointsP2 = p2._getNAFPoints1()
   var wnd = [nafPointsP1.points, nafPointsP2.points]
